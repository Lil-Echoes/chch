<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bookns">

	<select id="bookListAll" parameterType="book" resultType="book">
		select * from (select a.*, rowNum rn from
			<if test="order == 'recent' or order == null">
			(select * from book order by book_reg_date desc)a) 
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
			<if test="order == 'publish'">
			(select * from book order by book_publish_date desc)a) 
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
			<if test="order == 'review'">
			(select * from book)a) 
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
			<if test="order == 'lowPrice'">
			(select * from book order by book_price)a) 
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
			<if test="order == 'highPrice'">
			(select * from book order by book_price desc)a) 
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
			<if test="order == 'title'">
			(select * from book order by book_title)a)
			where rn between #{startRow} and #{endRow} and book_del='n'
			</if>
	</select>
	
	<select id="bookListSelect" parameterType="book" resultType="book">
<!-- 		select * from (select a.*, rowNum rn from (select * from book where book_kind=#{book_kind} order by book_reg_date desc)a) -->
<!-- 		where rn between #{startRow} and #{endRow} and book_del='n' -->
		
		select * from (select a.*, rowNum rn from (select * from book
		<if test='book_kind.equalsIgnoreCase("all")'>
			
		</if>
		<if test='book_kind.equalsIgnoreCase("IT") or book_kind.equals("문학") or book_kind.equals("역사") 
					or book_kind.equals("과학") or book_kind.equals("경제")'>
			<if test="book_kind == 'IT'">
				where book_kind like 'IT' || '%'
			</if>
			<if test="book_kind == '문학'">
				where book_kind like '문학' || '%'
			</if>
			<if test="book_kind == '역사'">
				where book_kind like '역사' || '%'
			</if>
			<if test="book_kind == '과학'">
				where book_kind like '과학' || '%'
			</if>
			<if test="book_kind == '경제'">
				where book_kind like '경제' || '%'
			</if>
		</if>
		<if test='!book_kind.equalsIgnoreCase("all") and !book_kind.equalsIgnoreCase("IT") and !book_kind.equals("문학") and !book_kind.equals("역사") 
					and !book_kind.equals("과학") and !book_kind.equals("경제")'>
			where book_kind = #{book_kind}
		</if>
				
				<if test="order == 'recent' or order == null">
					order by book_reg_date desc 
				</if>
				<if test="order == 'publish'">
					order by book_publish_date desc
				</if>
				<if test="order == 'best'">
					<!-- 추가예정 -->
				</if>
				<if test="order == 'review'">
					
				</if>
				<if test="order == 'lowPrice'">
					order by book_price
				</if>
				<if test="order == 'highPrice'">
					order by book_price desc
				</if>
				<if test="order == 'title'">
					order by book_title
				</if>
		)a) where rn between #{startRow} and #{endRow} and book_del='n'
	</select>
	
	<select id="getTotal" parameterType="book" resultType="integer">
		select count(*) from book where book_del='n'
	</select>
	
	<select id="selectbook" parameterType="integer" resultType="book">
		select * from book where book_no=#{book_no}
	</select>

	<select id="bookSearch" parameterType="String" resultType="book">
		select * from book where book_title like '%'||#{searchText}||'%' order by book_no
	</select>
	
	<select id="searchList" parameterType="book" resultType="book">
		select * from book where
			book_title like '%' || #{keyword} || '%' or
			book_author like '%' || #{keyword} || '%' or
			book_publisher like '%' || #{keyword} || '%'
		order by book_publish_date
	</select>
	
	<!-- HYC -->
	<!-- 책 번호로 책 리스트 불러오기 -->
	<select id="list" parameterType="integer" resultType="book">
		select * from book where book_no=#{book_no}
	</select>
	<update id="update2" parameterType="integer">
		update book set
		book_count=book_count - #{book_count}
	</update>
</mapper>